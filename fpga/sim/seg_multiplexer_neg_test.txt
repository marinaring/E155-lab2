// seg_multiplexer_test, for when counter is two bits
// Marina Ring
// mring@hmc.edu
// 9/4/2024


// digit1_digit2 __ multi_switch __ seg
// 80
1000_0000__0__111_1111 // 8
1000_0000__0__111_1111 // 8
1000_0000__0__111_1111 // 8
1000_0000__0__111_1111 // 8
1000_0000__1__111_1110 // 0
1000_0000__1__111_1110 // 0
1000_0000__1__111_1110 // 0
1000_0000__1__111_1110 // 0
1000_0000__0__111_1111 // 8
1000_0000__0__111_1111 // 8
1000_0000__0__111_1111 // 8
1000_0000__0__111_1111 // 8
// b5
1011_0101__1__101_1011 // 5
1011_0101__1__101_1011 // 5
// 80
1000_0000__1__111_1110 // 0
1000_0000__1__111_1110 // 0
// b5
1011_0101__0__001_1111 // b
1011_0101__0__001_1111 // b
// a1
1010_0001__0__111_0111 // a
1010_0001__0__111_0111 // a
1010_0001__1__011_0000 // 1
1010_0001__1__011_0000 // 1
1010_0001__1__011_0000 // 1
1010_0001__1__011_0000 // 1
// ef
1110_1111__0__100_1111 // e
1110_1111__0__100_1111 // e
1110_1111__0__100_1111 // e
1110_1111__0__100_1111 // e
1110_1111__1__100_0111 // f
1110_1111__1__100_0111 // f
1110_1111__1__100_0111 // f
1110_1111__1__100_0111 // f
1110_1111__0__100_1111 // e
1110_1111__0__100_1111 // e
1110_1111__0__100_1111 // e
1110_1111__0__100_1111 // e
1110_1111__1__100_0111 // f
1110_1111__1__100_0111 // f
1110_1111__1__100_0111 // f
// 00
0000_0000__1__111_1110 // 0
// 1f
0001_1111__0__011_0000 // 1
0001_1111__0__011_0000 // 1
0001_1111__0__011_0000 // 1
0001_1111__0__011_0000 // 1
0001_1111__1__100_0111 // f
0001_1111__1__100_0111 // f
0001_1111__1__100_0111 // f
0001_1111__1__100_0111 // f

