# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 2 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv failed with 3 errors.
# 6 compiles, 3 failed with 6 errors.
# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv failed with 2 errors.
# 6 compiles, 3 failed with 4 errors.
# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv failed with 2 errors.
# 6 compiles, 3 failed with 4 errors.
# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv failed with 1 errors.
# 6 compiles, 3 failed with 3 errors.
# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv failed with 2 errors.
# 6 compiles, 3 failed with 4 errors.
# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv failed with 3 errors.
# 6 compiles, 3 failed with 5 errors.
# Compile of dig_oscillator.sv failed with 1 errors.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# 6 compiles, 2 failed with 2 errors.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# 6 compiles, 1 failed with 1 error.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv failed with 2 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# 6 compiles, 1 failed with 2 errors.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# 6 compiles, 0 failed with no errors.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# 6 compiles, 0 failed with no errors.
vsim -gui work.led_controller_testbench
# vsim -gui work.led_controller_testbench 
# Start time: 23:08:31 on Sep 03,2024
# //  ModelSim DE-64 2022.3 Jul 18 2022
# //
# //  Copyright 1991-2022 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim DE-64 and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading work.led_controller_testbench
# Loading work.led_controller
add wave -position end  sim:/led_controller_testbench/clk
add wave -position end  sim:/led_controller_testbench/reset
add wave -position end  sim:/led_controller_testbench/s
add wave -position end  sim:/led_controller_testbench/led
add wave -position end  sim:/led_controller_testbench/led_expected
run 200
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# 6 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.led_controller_testbench
# Loading work.led_controller
run 300
#         13 tests completed with          0 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/led_controller_testbench.sv(43)
#    Time: 145 ns  Iteration: 1  Instance: /led_controller_testbench
# Break in Module led_controller_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/led_controller_testbench.sv line 43
quit -sim
# End time: 00:12:09 on Sep 04,2024, Elapsed time: 1:03:38
# Errors: 0, Warnings: 1
# Error opening C:\Users\mring\Documents\MicroPs\Lab 2\E155-lab2\fpga\sim\seg_multiplexer_test.txt
# Path name 'C:\Users\mring\Documents\MicroPs\Lab 2\E155-lab2\fpga\sim\seg_multiplexer_test.txt' doesn't exist.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv failed with 1 errors.
# 7 compiles, 2 failed with 2 errors.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv failed with 1 errors.
# 7 compiles, 2 failed with 2 errors.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv failed with 6 errors.
# 7 compiles, 2 failed with 7 errors.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv failed with 1 errors.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 1 failed with 1 error.
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
vsim -gui work.seg_multiplexer_testbench
# vsim -gui work.seg_multiplexer_testbench 
# Start time: 00:23:53 on Sep 04,2024
# Loading sv_std.std
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
add wave -position end  sim:/seg_multiplexer_testbench/clk
add wave -position end  sim:/seg_multiplexer_testbench/reset
add wave -position end  sim:/seg_multiplexer_testbench/s
add wave -position end  sim:/seg_multiplexer_testbench/seg
add wave -position end  sim:/seg_multiplexer_testbench/seg_expected
add wave -position end  sim:/seg_multiplexer_testbench/multi_switch
add wave -position end  sim:/seg_multiplexer_testbench/multi_switch_expected
run 1000
# ** Warning: (vsim-7) Failed to open readmem file "seg_multiplexer_test.txt" in read mode.
# No such file or directory. (errno = ENOENT)    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(24)
#    Time: 0 ns  Iteration: 0  Instance: /seg_multiplexer_testbench
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
run 1000
# ** Warning: (vsim-PLI-3406) Too many digits (16) in data on line 8 of file "seg_multiplexer_neg_test.txt". (Max is 13.)    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(24)
#    Time: 0 ns  Iteration: 0  Instance: /seg_multiplexer_testbench
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
run 1000
# Error: input = 10000000
#  outputs = 0000000 (1111110 expected)
#  outputs = x (1 expected)
# Error: input = 10000001
#  outputs = 1111111 (0110000 expected)
#  outputs = x (1 expected)
# Error: input = 10000010
#  outputs = 1111111 (1101101 expected)
#  outputs = x (1 expected)
# Error: input = 10000011
#  outputs = 1111111 (1111001 expected)
#  outputs = x (1 expected)
# Error: input = 10000100
#  outputs = 1111111 (0110011 expected)
#  outputs = x (1 expected)
# Error: input = 10000101
#  outputs = 1111111 (1011011 expected)
#  outputs = x (1 expected)
# Error: input = 10000110
#  outputs = 1111111 (1011111 expected)
#  outputs = x (1 expected)
# Error: input = 10000111
#  outputs = 1111111 (1110000 expected)
#  outputs = x (1 expected)
# Error: input = 10001001
#  outputs = 1111111 (1110011 expected)
#  outputs = x (1 expected)
# Error: input = 10001010
#  outputs = 1111111 (1110111 expected)
#  outputs = x (1 expected)
# Error: input = 10001011
#  outputs = 1111111 (0011111 expected)
#  outputs = x (1 expected)
# Error: input = 10001100
#  outputs = 1111111 (1001110 expected)
#  outputs = x (1 expected)
# Error: input = 10001101
#  outputs = 1111111 (0111101 expected)
#  outputs = x (1 expected)
# Error: input = 10001110
#  outputs = 1111111 (1001111 expected)
#  outputs = x (1 expected)
# Error: input = 10001111
#  outputs = 1111111 (1000111 expected)
#  outputs = x (1 expected)
# Error: input = 10110000
#  outputs = 1111111 (1111110 expected)
#  outputs = x (1 expected)
# Error: input = 10110001
#  outputs = 0011111 (0110000 expected)
#  outputs = x (1 expected)
# Error: input = 10110010
#  outputs = 0011111 (1101101 expected)
#  outputs = x (1 expected)
# Error: input = 10110011
#  outputs = 0011111 (1111001 expected)
#  outputs = x (1 expected)
# Error: input = 10110100
#  outputs = 0011111 (0110011 expected)
#  outputs = x (1 expected)
# Error: input = 10110101
#  outputs = 0011111 (1011011 expected)
#  outputs = x (1 expected)
# Error: input = 10110110
#  outputs = 0011111 (1011111 expected)
#  outputs = x (1 expected)
# Error: input = 10110111
#  outputs = 0011111 (1110000 expected)
#  outputs = x (1 expected)
# Error: input = 10111000
#  outputs = 0011111 (1111111 expected)
#  outputs = x (1 expected)
# Error: input = 10111001
#  outputs = 0011111 (1110011 expected)
#  outputs = x (1 expected)
# Error: input = 10111010
#  outputs = 0011111 (1110111 expected)
#  outputs = x (1 expected)
# Error: input = 10111100
#  outputs = 0011111 (1001110 expected)
#  outputs = x (1 expected)
# Error: input = 10111101
#  outputs = 0011111 (0111101 expected)
#  outputs = x (1 expected)
# Error: input = 10111110
#  outputs = 0011111 (1001111 expected)
#  outputs = x (1 expected)
# Error: input = 10111111
#  outputs = 0011111 (1000111 expected)
#  outputs = x (1 expected)
#         32 tests completed with         30 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(45)
#    Time: 335 ns  Iteration: 1  Instance: /seg_multiplexer_testbench
# Break in Module seg_multiplexer_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv line 45
restart -f
run 500
# Error: input = 10000000
#  outputs = 0000000 (1111110 expected)
#  outputs = x (1 expected)
# Error: input = 10000001
#  outputs = 1111111 (0110000 expected)
#  outputs = x (1 expected)
# Error: input = 10000010
#  outputs = 1111111 (1101101 expected)
#  outputs = x (1 expected)
# Error: input = 10000011
#  outputs = 1111111 (1111001 expected)
#  outputs = x (1 expected)
# Error: input = 10000100
#  outputs = 1111111 (0110011 expected)
#  outputs = x (1 expected)
# Error: input = 10000101
#  outputs = 1111111 (1011011 expected)
#  outputs = x (1 expected)
# Error: input = 10000110
#  outputs = 1111111 (1011111 expected)
#  outputs = x (1 expected)
# Error: input = 10000111
#  outputs = 1111111 (1110000 expected)
#  outputs = x (1 expected)
# Error: input = 10001001
#  outputs = 1111111 (1110011 expected)
#  outputs = x (1 expected)
# Error: input = 10001010
#  outputs = 1111111 (1110111 expected)
#  outputs = x (1 expected)
# Error: input = 10001011
#  outputs = 1111111 (0011111 expected)
#  outputs = x (1 expected)
# Error: input = 10001100
#  outputs = 1111111 (1001110 expected)
#  outputs = x (1 expected)
# Error: input = 10001101
#  outputs = 1111111 (0111101 expected)
#  outputs = x (1 expected)
# Error: input = 10001110
#  outputs = 1111111 (1001111 expected)
#  outputs = x (1 expected)
# Error: input = 10001111
#  outputs = 1111111 (1000111 expected)
#  outputs = x (1 expected)
# Error: input = 10110000
#  outputs = 1111111 (1111110 expected)
#  outputs = x (1 expected)
# Error: input = 10110001
#  outputs = 0011111 (0110000 expected)
#  outputs = x (1 expected)
# Error: input = 10110010
#  outputs = 0011111 (1101101 expected)
#  outputs = x (1 expected)
# Error: input = 10110011
#  outputs = 0011111 (1111001 expected)
#  outputs = x (1 expected)
# Error: input = 10110100
#  outputs = 0011111 (0110011 expected)
#  outputs = x (1 expected)
# Error: input = 10110101
#  outputs = 0011111 (1011011 expected)
#  outputs = x (1 expected)
# Error: input = 10110110
#  outputs = 0011111 (1011111 expected)
#  outputs = x (1 expected)
# Error: input = 10110111
#  outputs = 0011111 (1110000 expected)
#  outputs = x (1 expected)
# Error: input = 10111000
#  outputs = 0011111 (1111111 expected)
#  outputs = x (1 expected)
# Error: input = 10111001
#  outputs = 0011111 (1110011 expected)
#  outputs = x (1 expected)
# Error: input = 10111010
#  outputs = 0011111 (1110111 expected)
#  outputs = x (1 expected)
# Error: input = 10111100
#  outputs = 0011111 (1001110 expected)
#  outputs = x (1 expected)
# Error: input = 10111101
#  outputs = 0011111 (0111101 expected)
#  outputs = x (1 expected)
# Error: input = 10111110
#  outputs = 0011111 (1001111 expected)
#  outputs = x (1 expected)
# Error: input = 10111111
#  outputs = 0011111 (1000111 expected)
#  outputs = x (1 expected)
#         32 tests completed with         30 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(45)
#    Time: 335 ns  Iteration: 1  Instance: /seg_multiplexer_testbench
# Break in Module seg_multiplexer_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv line 45
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
run 500
# Error: input = 10000000
#  outputs = 0000000 (1111110 expected)
#  outputs = x (1 expected)
# Error: input = 10000001
#  outputs = 1111111 (0110000 expected)
#  outputs = x (1 expected)
# Error: input = 10000010
#  outputs = 1111111 (1101101 expected)
#  outputs = x (1 expected)
# Error: input = 10000011
#  outputs = 1111111 (1111001 expected)
#  outputs = x (1 expected)
# Error: input = 10000100
#  outputs = 1111111 (0110011 expected)
#  outputs = x (1 expected)
# Error: input = 10000101
#  outputs = 1111111 (1011011 expected)
#  outputs = x (1 expected)
# Error: input = 10000110
#  outputs = 1111111 (1011111 expected)
#  outputs = x (1 expected)
# Error: input = 10000111
#  outputs = 1111111 (1110000 expected)
#  outputs = x (1 expected)
# Error: input = 10001001
#  outputs = 1111111 (1110011 expected)
#  outputs = x (1 expected)
# Error: input = 10001010
#  outputs = 1111111 (1110111 expected)
#  outputs = x (1 expected)
# Error: input = 10001011
#  outputs = 1111111 (0011111 expected)
#  outputs = x (1 expected)
# Error: input = 10001100
#  outputs = 1111111 (1001110 expected)
#  outputs = x (1 expected)
# Error: input = 10001101
#  outputs = 1111111 (0111101 expected)
#  outputs = x (1 expected)
# Error: input = 10001110
#  outputs = 1111111 (1001111 expected)
#  outputs = x (1 expected)
# Error: input = 10001111
#  outputs = 1111111 (1000111 expected)
#  outputs = x (1 expected)
# Error: input = 10110000
#  outputs = 1111111 (1111110 expected)
#  outputs = x (1 expected)
# Error: input = 10110001
#  outputs = 0011111 (0110000 expected)
#  outputs = x (1 expected)
# Error: input = 10110010
#  outputs = 0011111 (1101101 expected)
#  outputs = x (1 expected)
# Error: input = 10110011
#  outputs = 0011111 (1111001 expected)
#  outputs = x (1 expected)
# Error: input = 10110100
#  outputs = 0011111 (0110011 expected)
#  outputs = x (1 expected)
# Error: input = 10110101
#  outputs = 0011111 (1011011 expected)
#  outputs = x (1 expected)
# Error: input = 10110110
#  outputs = 0011111 (1011111 expected)
#  outputs = x (1 expected)
# Error: input = 10110111
#  outputs = 0011111 (1110000 expected)
#  outputs = x (1 expected)
# Error: input = 10111000
#  outputs = 0011111 (1111111 expected)
#  outputs = x (1 expected)
# Error: input = 10111001
#  outputs = 0011111 (1110011 expected)
#  outputs = x (1 expected)
# Error: input = 10111010
#  outputs = 0011111 (1110111 expected)
#  outputs = x (1 expected)
# Error: input = 10111100
#  outputs = 0011111 (1001110 expected)
#  outputs = x (1 expected)
# Error: input = 10111101
#  outputs = 0011111 (0111101 expected)
#  outputs = x (1 expected)
# Error: input = 10111110
#  outputs = 0011111 (1001111 expected)
#  outputs = x (1 expected)
# Error: input = 10111111
#  outputs = 0011111 (1000111 expected)
#  outputs = x (1 expected)
#         32 tests completed with         30 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(45)
#    Time: 335 ns  Iteration: 1  Instance: /seg_multiplexer_testbench
# Break in Module seg_multiplexer_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv line 45
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
run 500
# Error: input = 10000000
#  outputs = 0000000 (1111110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000001
#  outputs = 1111111 (0110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000010
#  outputs = 1111111 (1101101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000011
#  outputs = 1111111 (1111001 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000100
#  outputs = 1111111 (0110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000101
#  outputs = 1111111 (1011011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000110
#  outputs = 1111111 (1011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000111
#  outputs = 1111111 (1110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001000
#  outputs = 1111111 (1111111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001001
#  outputs = 1111111 (1110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001010
#  outputs = 1111111 (1110111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001011
#  outputs = 1111111 (0011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001100
#  outputs = 1111111 (1001110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001101
#  outputs = 1111111 (0111101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001110
#  outputs = 1111111 (1001111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001111
#  outputs = 1111111 (1000111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110000
#  outputs = 1111111 (1111110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110001
#  outputs = 0011111 (0110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110010
#  outputs = 0011111 (1101101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110011
#  outputs = 0011111 (1111001 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110100
#  outputs = 0011111 (0110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110101
#  outputs = 0011111 (1011011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110110
#  outputs = 0011111 (1011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110111
#  outputs = 0011111 (1110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111000
#  outputs = 0011111 (1111111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111001
#  outputs = 0011111 (1110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111010
#  outputs = 0011111 (1110111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111011
#  outputs = 0011111 (0011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111100
#  outputs = 0011111 (1001110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111101
#  outputs = 0011111 (0111101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111110
#  outputs = 0011111 (1001111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111111
#  outputs = 0011111 (1000111 expected)
#  outputs = 0 (1 expected)
#         32 tests completed with         32 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(45)
#    Time: 335 ns  Iteration: 1  Instance: /seg_multiplexer_testbench
# Break in Module seg_multiplexer_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv line 45
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
run 500
# Error: input = 10000001
#  outputs = 1111110 (0110000 expected)
#  outputs = 1 (1 expected)
# Error: input = 10000010
#  outputs = 0110000 (1101101 expected)
#  outputs = 1 (1 expected)
# Error: input = 10000011
#  outputs = 1101101 (1111001 expected)
#  outputs = 1 (1 expected)
# Error: input = 10000100
#  outputs = 1111001 (0110011 expected)
#  outputs = 1 (1 expected)
# Error: input = 10000101
#  outputs = 0110011 (1011011 expected)
#  outputs = 1 (1 expected)
# Error: input = 10000110
#  outputs = 1011011 (1011111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10000111
#  outputs = 1011111 (1110000 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001000
#  outputs = 1110000 (1111111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001001
#  outputs = 1111111 (1110011 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001010
#  outputs = 1110011 (1110111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001011
#  outputs = 1110111 (0011111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001100
#  outputs = 0011111 (1001110 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001101
#  outputs = 1001110 (0111101 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001110
#  outputs = 0111101 (1001111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10001111
#  outputs = 1001111 (1000111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110000
#  outputs = 1000111 (1111110 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110001
#  outputs = 1111110 (0110000 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110010
#  outputs = 0110000 (1101101 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110011
#  outputs = 1101101 (1111001 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110100
#  outputs = 1111001 (0110011 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110101
#  outputs = 0110011 (1011011 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110110
#  outputs = 1011011 (1011111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10110111
#  outputs = 1011111 (1110000 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111000
#  outputs = 1110000 (1111111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111001
#  outputs = 1111111 (1110011 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111010
#  outputs = 1110011 (1110111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111011
#  outputs = 1110111 (0011111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111100
#  outputs = 0011111 (1001110 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111101
#  outputs = 1001110 (0111101 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111110
#  outputs = 0111101 (1001111 expected)
#  outputs = 1 (1 expected)
# Error: input = 10111111
#  outputs = 1001111 (1000111 expected)
#  outputs = 1 (1 expected)
#         32 tests completed with         31 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(45)
#    Time: 340 ns  Iteration: 1  Instance: /seg_multiplexer_testbench
# Break in Module seg_multiplexer_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv line 45
# Compile of dig_oscillator.sv was successful.
# Compile of lab2_mr.sv was successful.
# Compile of led_controller.sv was successful.
# Compile of led_controller_testbench.sv was successful.
# Compile of seg_logic.sv was successful.
# Compile of seg_multiplexer.sv was successful.
# Compile of seg_multiplexer_testbench.sv was successful.
# 7 compiles, 0 failed with no errors.
restart -f
# ** Note: (vsim-12125) Error and warning message counts have been reset to '0' because of 'restart'.
# Loading work.seg_multiplexer_testbench
# Loading work.seg_multiplexer
# Loading work.seg_logic
run 500
# Error: input = 10000000
#  outputs = 0000000 (1111110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000001
#  outputs = 1111111 (0110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000010
#  outputs = 1111111 (1101101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000011
#  outputs = 1111111 (1111001 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000100
#  outputs = 1111111 (0110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000101
#  outputs = 1111111 (1011011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000110
#  outputs = 1111111 (1011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10000111
#  outputs = 1111111 (1110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001000
#  outputs = 1111111 (1111111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001001
#  outputs = 1111111 (1110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001010
#  outputs = 1111111 (1110111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001011
#  outputs = 1111111 (0011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001100
#  outputs = 1111111 (1001110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001101
#  outputs = 1111111 (0111101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001110
#  outputs = 1111111 (1001111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10001111
#  outputs = 1111111 (1000111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110000
#  outputs = 1111111 (1111110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110001
#  outputs = 0011111 (0110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110010
#  outputs = 0011111 (1101101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110011
#  outputs = 0011111 (1111001 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110100
#  outputs = 0011111 (0110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110101
#  outputs = 0011111 (1011011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110110
#  outputs = 0011111 (1011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10110111
#  outputs = 0011111 (1110000 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111000
#  outputs = 0011111 (1111111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111001
#  outputs = 0011111 (1110011 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111010
#  outputs = 0011111 (1110111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111011
#  outputs = 0011111 (0011111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111100
#  outputs = 0011111 (1001110 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111101
#  outputs = 0011111 (0111101 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111110
#  outputs = 0011111 (1001111 expected)
#  outputs = 0 (1 expected)
# Error: input = 10111111
#  outputs = 0011111 (1000111 expected)
#  outputs = 0 (1 expected)
#         32 tests completed with         32 errors
# ** Note: $stop    : C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv(45)
#    Time: 335 ns  Iteration: 1  Instance: /seg_multiplexer_testbench
# Break in Module seg_multiplexer_testbench at C:/Users/mring/Documents/MicroPs/Lab 2/E155-lab2/fpga/radiant_project/e155_lab2/source/impl_1/seg_multiplexer_testbench.sv line 45
